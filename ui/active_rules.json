[
    {
        "name": "Person Total Hours",
        "description": "To calculate total hours entered from timesheet",
        "use_case": "Person",
        "code": "Rule.sum(derive=Person.total_hours_entered, as_sum_of=Timesheet.hours_worked)",
        "error": null,
        "status": "active",
        "entity": "Person",
        "id": "01JMW5DWSE1BEGMTDQR2RQ61TW"
    },
    {
        "name": "Person Total Amount",
        "description": "Calculate total amount billed by multiplying total hours entered with billing rate",
        "use_case": "Person",
        "code": "Rule.formula(derive=Person.total_amount_billed, as_expression=lambda row: row.total_hours_entered * row.billing_rate)",
        "error": null,
        "status": "active",
        "entity": "Person",
        "id": "01JMW5DWVCNE5Y6R0EPFYJB094"
    },
    {
        "name": "Person Billing Rate Constraint",
        "description": "Ensures the billing rate is > 0 and < 200",
        "use_case": "Person",
        "code": "Rule.constraint(validate=Person, as_condition=lambda row: 0 < row.billing_rate < 200, error_msg=\"Billing rate must be greater than 0 and less than 200\")",
        "error": null,
        "status": "active",
        "entity": "Person",
        "id": "01JMW5DWW29JKP1CR7WTPRYBDT"
    },
    {
        "name": "Timesheet Copy Rate",
        "description": "Copy billing rate from Person to Timesheet",
        "use_case": "Timesheet",
        "code": "Rule.copy(derive=Timesheet.billing_rate, from_parent=Person.billing_rate)",
        "error": null,
        "status": "active",
        "entity": "Timesheet",
        "id": "01JMW5DWWXY42Q5TKGTMYJH454"
    },
    {
        "name": "Timesheet Amount Billed",
        "description": "Calculate total amount billed for billable tasks",
        "use_case": "Timesheet",
        "code": "Rule.formula(derive=Timesheet.total_amount_billed, as_expression=lambda row: row.billing_rate * row.hours_worked if row.is_billable else 0)",
        "error": null,
        "status": "active",
        "entity": "Timesheet",
        "id": "01JMW5DWX9Q6GB7F5GKC75W9QG"
    },
    {
        "name": "Timesheet Hours Worked Constraint",
        "description": "Enforce hours worked constraints",
        "use_case": "Timesheet",
        "code": "Rule.constraint(validate=Timesheet, as_condition=lambda row: 0 < row.hours_worked < 15, error_msg=\"Hours worked must be greater than 0 and less than 15\")",
        "error": null,
        "status": "active",
        "entity": "Timesheet",
        "id": "01JMW5DWY1NGPH7CE3WQXDNVQ0"
    },
    {
        "name": "Task Hours Calculations",
        "description": "Derive total task hours from Timesheet",
        "use_case": "Task",
        "code": "Rule.sum(derive=Task.total_task_hours_worked, as_sum_of=Timesheet.hours_worked)",
        "error": null,
        "status": "active",
        "entity": "Task",
        "id": "01JMW5DWYTXJ3N98QVWCYV7FBM"
    },
    {
        "name": "Task Amount Calculations",
        "description": "Derive total task amount from Timesheet",
        "use_case": "Task",
        "code": "Rule.sum(derive=Task.total_task_amount_billed, as_sum_of=Timesheet.total_amount_billed)",
        "error": null,
        "status": "active",
        "entity": "Task",
        "id": "01JMW5DWZ5V2FAMVYFVC0DD7GP"
    },
    {
        "name": "Task Budget Check",
        "description": "Enforce budget constraints for tasks",
        "use_case": "Task",
        "code": "Rule.formula(derive=Task.is_over_budget, as_expression=lambda row: row.total_task_hours_worked > row.task_budget_hours)",
        "error": null,
        "status": "active",
        "entity": "Task",
        "id": "01JMW5DWZF891E8702490NSGHA"
    },
    {
        "name": "Project Hours Calculations",
        "description": "Aggregate total project hours from Task",
        "use_case": "Project",
        "code": "Rule.sum(derive=Project.total_project_hours, as_sum_of=Task.total_task_hours_worked)",
        "error": null,
        "status": "active",
        "entity": "Project",
        "id": "01JMW5DX03KFYJA5AJK9C8KYS9"
    },
    {
        "name": "Project Amount Calculations",
        "description": "Aggregate total amount from Task",
        "use_case": "Project",
        "code": "Rule.sum(derive=Project.total_project_amount, as_sum_of=Task.total_task_amount_billed)",
        "error": null,
        "status": "active",
        "entity": "Project",
        "id": "01JMW5DX0TD8SHCZYE7G1MSQ7J"
    },
    {
        "name": "Project Budget Check",
        "description": "Check project budget constraints",
        "use_case": "Project",
        "code": "Rule.formula(derive=Project.is_over_budget, as_expression=lambda row: row.total_project_amount > row.project_budget_amount)",
        "error": null,
        "status": "active",
        "entity": "Project",
        "id": "01JMW5DX1B07T9QV15HE1V5MFB"
    },
    {
        "name": "Client Hours Calculations",
        "description": "Sum client's total hours from Project",
        "use_case": "Client",
        "code": "Rule.sum(derive=Client.total_hours, as_sum_of=Project.total_project_hours)",
        "error": null,
        "status": "active",
        "entity": "Client",
        "id": "01JMW5DX1R3BXWYJH4CH4650DK"
    },
    {
        "name": "Client Amount Calculations",
        "description": "Sum client's total amount from Project",
        "use_case": "Client",
        "code": "Rule.sum(derive=Client.total_amount, as_sum_of=Project.total_project_amount)",
        "error": null,
        "status": "active",
        "entity": "Client",
        "id": "01JMW5DX27DQABTT3XZ6TP985N"
    },
    {
        "name": "Client Budget Check",
        "description": "Client over budget constraint",
        "use_case": "Client",
        "code": "Rule.formula(derive=Client.is_over_budget, as_expression=lambda row: row.total_amount > row.budget_amount)",
        "error": null,
        "status": "active",
        "entity": "Client",
        "id": "01JMW5DX34P4CF7NAPZEWJ67P7"
    },
    {
        "name": "Client Invoice Total Calculation",
        "description": "Calculate total invoice amount for a client",
        "use_case": "Client",
        "code": "Rule.sum(derive=Client.invoice_total, as_sum_of=Invoice.invoice_amount)",
        "error": null,
        "status": "active",
        "entity": "Client",
        "id": "01JMW5DX3JV7G9ZE5P9H9HXM6H"
    },
    {
        "name": "Client Payment Total Calculation",
        "description": "Calculate payment total for a client",
        "use_case": "Client",
        "code": "Rule.sum(derive=Client.payment_total, as_sum_of=Invoice.payment_total)",
        "error": null,
        "status": "active",
        "entity": "Client",
        "id": "01JMW5DX43MBDE38C28W76HVAR"
    },
    {
        "name": "Client Kafka Event",
        "description": "Send client to Kafka when over budget",
        "use_case": "Client",
        "code": "Rule.after_flush_row_event(on_class=Client, calling=kafka_producer.send_row_to_kafka, if_condition=lambda row: row.is_over_budget and row.budget_amount > 0, with_args={\"topic\": \"client_over_budget\"})",
        "error": null,
        "status": "active",
        "entity": "Client",
        "id": "01JMW5DX4EJ2M8C6XJDQDEH5RM"
    },
    {
        "name": "Invoice Amount Credit",
        "description": "Calculate total invoice amount from items",
        "use_case": "Invoice",
        "code": "Rule.sum(derive=Invoice.invoice_amount, as_sum_of=InvoiceItem.task_amount)",
        "error": null,
        "status": "active",
        "entity": "Invoice",
        "id": "01JMW5DX59HGF46T3DHPD0GD8K"
    },
    {
        "name": "Invoice Payment Credit",
        "description": "Sum up payments for an invoice",
        "use_case": "Invoice",
        "code": "Rule.sum(derive=Invoice.payment_total, as_sum_of=Payment.amount)",
        "error": null,
        "status": "active",
        "entity": "Invoice",
        "id": "01JMW5DX5WFK04KWHEPE33GDRJ"
    },
    {
        "name": "Invoice Balance Calculation",
        "description": "Calculate balance on invoice",
        "use_case": "Invoice",
        "code": "Rule.formula(derive=Invoice.invoice_balance, as_expression=lambda row: row.invoice_amount - row.payment_total)",
        "error": null,
        "status": "active",
        "entity": "Invoice",
        "id": "01JMW5DX69TVMQ1S9QRHJS74D9"
    },
    {
        "name": "Invoice Payment Constraint",
        "description": "Check invoice is paid or not",
        "use_case": "Invoice",
        "code": "Rule.formula(derive=Invoice.is_paid, as_expression=lambda row: row.invoice_balance <= 0)",
        "error": null,
        "status": "active",
        "entity": "Invoice",
        "id": "01JMW5DX76ZTX5M03HR47KTT06"
    },
    {
        "name": "Invoice Task Count Calculation",
        "description": "Count of invoice items/tasks",
        "use_case": "Invoice",
        "code": "Rule.count(derive=Invoice.task_count, as_count_of=InvoiceItem)",
        "error": null,
        "status": "active",
        "entity": "Invoice",
        "id": "01JMW5DX7RZD5NJYGT45RKA48Q"
    },
    {
        "name": "Invoice Task Completion Count",
        "description": "Count of completed items/tasks",
        "use_case": "Invoice",
        "code": "Rule.count(derive=Invoice.completed_task_count, as_count_of=InvoiceItem, where=lambda row: row.is_completed is True)",
        "error": null,
        "status": "active",
        "entity": "Invoice",
        "id": "01JMW5DX866R30GT9X5FEXBVYM"
    },
    {
        "name": "Invoice Readiness Check",
        "description": "Check if an invoice is ready",
        "use_case": "Invoice",
        "code": "Rule.formula(derive=Invoice.is_ready, as_expression=lambda row: row.task_count == row.completed_task_count)",
        "error": null,
        "status": "active",
        "entity": "Invoice",
        "id": "01JMW5DX9694SWB6AF2ZWDG4QH"
    },
    {
        "name": "Invoice Kafka Event",
        "description": "Publish invoice to Kafka when ready",
        "use_case": "Invoice",
        "code": "Rule.after_flush_row_event(on_class=Invoice, calling=kafka_producer.send_row_to_kafka, if_condition=lambda row: row.is_ready, with_args={\"topic\": \"invoice_ready\"})",
        "error": null,
        "status": "active",
        "entity": "Invoice",
        "id": "01JMW5DX9TSQXHGRJD88PYV2D9"
    },
    {
        "name": "InvoiceItem Task Amount",
        "description": "Copy Task's billed amount to InvoiceItem",
        "use_case": "InvoiceItem",
        "code": "Rule.copy(derive=InvoiceItem.task_amount, from_parent=Task.total_task_amount_billed)",
        "error": null,
        "status": "active",
        "entity": "InvoiceItem",
        "id": "01JMW5DXA53HY0Z8R16HP0X1TC"
    },
    {
        "name": "InvoiceItem Completion Check",
        "description": "Complete status for InvoiceItem when Task is complete",
        "use_case": "InvoiceItem",
        "code": "Rule.copy(derive=InvoiceItem.is_completed, from_parent=Task.is_completed)",
        "error": null,
        "status": "active",
        "entity": "InvoiceItem",
        "id": "01JMW5DXAQJNWBP7364GXGB0CX"
    }
]